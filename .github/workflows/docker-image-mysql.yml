name: Docker Image MySQL
on:
  schedule:
    - cron: "0 6 * * *" # 6 AM Daily
  push:
    paths:
      - images/.trigger
      - images/mysql/**
      - .github/workflows/*mysql*

jobs:
  mysql8:
    name: MySQL
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        version:
          - "8.0.28"
          - "8.0"

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - name: Set build-args
        run: |-
          ESCAPED_VERSION="$(echo ${{ matrix.version }} | sed 's/\./\\\./g')"
          MYSQL_VERSION=$(
            docker run --rm gcr.io/go-containerregistry/crane:v0.8.0 ls mysql \
            | egrep "^${ESCAPED_VERSION}(\.[0-9]+)?(\.[0-9]+)?(-oracle)?\$" | sort -Vr | head -n1
          )
          echo "MYSQL_VERSION=${MYSQL_VERSION}" | tee /dev/stderr >> $GITHUB_ENV

      - uses: docker/build-push-action@v4
        with:
          context: images/mysql
          platforms: linux/amd64,linux/arm64
          build-args: MYSQL_VERSION=${{ matrix.version }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: docker.io/rollupdev/mysql:${{ matrix.version }}
        if: ${{ !env.ACT && github.ref == 'refs/heads/main'}}

      - uses: docker/build-push-action@v4
        with:
          context: images/mysql
          platforms: linux/amd64,linux/arm64
          build-args: MYSQL_VERSION=${{ env.MYSQL_VERSION }}
          push: ${{ github.ref == 'refs/heads/alpha' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/rolldev-mysql:${{ matrix.version }}
        if: ${{ !env.ACT && github.ref == 'refs/heads/alpha'}}

  mysql-legacy:
    name: MySQL Legacy
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        version:
          - "5.5"
          - "5.6"
          - "5.7"

    steps:
      - uses: actions/checkout@v3
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ !env.ACT }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        if: ${{ !env.ACT }}

      - name: Set build-args
        run: |-
          ESCAPED_VERSION="$(echo ${{ matrix.version }} | sed 's/\./\\\./g')"
          MYSQL_VERSION=$(
            docker run --rm gcr.io/go-containerregistry/crane:v0.8.0 ls mysql \
            | egrep "^${ESCAPED_VERSION}(\.[0-9]+)?(\.[0-9]+)?(-oracle)?\$" | sort -Vr | head -n1
          )
          echo "MYSQL_VERSION=${MYSQL_VERSION}" | tee /dev/stderr >> $GITHUB_ENV

      - uses: docker/build-push-action@v4
        with:
          context: images/mysql
          platforms: linux/amd64
          build-args: MYSQL_VERSION=${{ matrix.version }}
          push: ${{ github.ref == 'refs/heads/main' && !env.ACT }}
          tags: docker.io/rollupdev/mysql:${{ matrix.version }}
        if: ${{ !env.ACT && github.ref == 'refs/heads/main'}}

      - uses: docker/build-push-action@v4
        with:
          context: images/mysql
          platforms: linux/amd64
          build-args: MYSQL_VERSION=${{ env.MYSQL_VERSION }}
          push: ${{ github.ref == 'refs/heads/alpha' && !env.ACT }}
          tags: ghcr.io/${{ github.repository_owner }}/rolldev-mysql:${{ matrix.version }}
        if: ${{ !env.ACT && github.ref == 'refs/heads/alpha'}}
